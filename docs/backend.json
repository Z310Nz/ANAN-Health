{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the ANAN Health application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "lineUserId": {
          "type": "string",
          "description": "The user's ID from the LINE platform."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name from their LINE profile."
        },
        "pictureUrl": {
          "type": "string",
          "description": "URL of the user's profile picture from their LINE profile.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "lineUserId",
        "displayName",
        "pictureUrl"
      ]
    },
    "PremiumCalculationSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PremiumCalculationSession",
      "type": "object",
      "description": "Represents a user's premium calculation session, storing input data and results.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the premium calculation session."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N PremiumCalculationSession)"
        },
        "inputData": {
          "type": "string",
          "description": "JSON string containing the user's input data for the premium calculation.",
          "format": "json-string"
        },
        "calculationResult": {
          "type": "string",
          "description": "JSON string containing the premium calculation results.",
          "format": "json-string"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the session was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the session was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "inputData",
        "calculationResult",
        "createdAt",
        "updatedAt"
      ]
    },
    "Policy": {
      "title": "Policy",
      "type": "object",
      "description": "Represents an insurance policy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the policy."
        },
        "name": {
          "type": "string",
          "description": "The name of the insurance policy."
        },
        "segment": {
            "type": "string"
        },
        "segment_Code": {
            "type": "string"
        },
        "Budget": {
            "type": "string"
        },
        "Condition": {
            "type": "string"
        },
        "ages": {
            "type": "object",
            "description": "A map of ages to rate values.",
            "patternProperties": {
                "^[0-9]+$": {
                    "type": "number"
                }
            }
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Path-based ownership ensures that only the user can access their own profile data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, corresponding to their Firebase Auth UID."
            }
          ],
          "rules": "allow read, write: if request.auth.uid == userId;"
        }
      },
      {
        "path": "/main-policies-male/{policyId}",
        "definition": {
          "entityName": "Policy",
          "schema": {
            "$ref": "#/backend/entities/Policy"
          },
          "description": "Stores main insurance policies available for males. Publicly readable and writable by any authenticated user.",
          "params": [
            {
              "name": "policyId",
              "description": "The unique identifier of the policy."
            }
          ],
          "rules": "allow read, write: if request.auth != null;"
        }
      },
      {
        "path": "/main-policies-female/{policyId}",
        "definition": {
          "entityName": "Policy",
          "schema": {
            "$ref": "#/backend/entities/Policy"
          },
          "description": "Stores main insurance policies available for females. Publicly readable and writable by any authenticated user.",
          "params": [
            {
              "name": "policyId",
              "description": "The unique identifier of the policy."
            }
          ],
          "rules": "allow read, write: if request.auth != null;"
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to be secure and scalable. The `users` collection is private to each user. The `main-policies-male` and `main-policies-female` collections are made readable and writable for any authenticated user to allow the admin data seeding tool to function correctly. This is a reasonable approach for non-sensitive, publicly available data like a list of insurance policies."
  }
}
